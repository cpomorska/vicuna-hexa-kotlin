quarkus:
  camel:
    #    context:
    #      name: vicunacamel
    openapi:
      expose:
        enabled: true
#    servlet:
#      url-patterns: /vicuna/*

  http:
    cors:
      ~: true
      origins: /*
      headers: origin, accept, authorization, content-type, x-requested-with
      methods: GET, POST, PUT, DELETE, OPTIONS
    http2: false
    access-log:
      enabled: true
    port: 8089
    root-path: /vicuna
    auth:
      proactive: true
      permission:
        secured:
          paths: /vicuna/api/*
          policy: authenticated
        public:
          paths: /vicuna/q/*
          policy: permit

#  swagger-ui:
    #always-include: false
    #path: hui
#    enable: true

#  smallrye-openapi:
#    enabled: true

  datasource:
    db-kind: postgresql
    jdbc:
      pooling-enabled: true
      url: jdbc:postgresql://host.docker.internal:15432/vicuna_user
    username: vicuna_user
    password: vicuna_pw
    devservices:
      enabled: true
      port: 15432
      username: vicuna_user
      password: vicuna_pw
      db-name: vicuna_user
#    database:
#      generation: create
#      create-schemas: true

  liquibase:
    enabled: true
    migrate-at-start: true
    change-log: db/db.changelog-master.yaml

  container-image:
    builder: docker
    build: true
    push: false
    image: cpomorska/vicuna-kotlin-quarkus
    tag: 1.0.develop

  oidc:
    #auth-server-url: http://localhost:8180/realms/development
    #client-id: backend-service
    #client-secret: qQOkEGGd6JzzeDj0wkqjTFzrHdJiWdgz
    application-type: hybrid

#  oidc-client:
#    auth-server-url: http://host.docker.internal:8180/realms/development
#    client-id: backend-service
#    credentials:
#      client-secret: qQOkEGGd6JzzeDj0wkqjTFzrHdJiWdgz
#    grant-type: password
#    grant-options:
#      password:
#        username: alice
#        password: alice

  keycloak:
    devservices:
      enabled: true
      start-command: "start-dev --db=dev-mem"
      port: 8180
      realm-path: dev-realm.json
      realm-name: development

  #
  #    auth-server-enabled: true
  #    port: 8180
  #    realm-path: dev-realm.json
  #    service-name: backend-service
  #    credentials:
  #      username: alice
  #      password: alice
  #      client-secret: qQOkEGGd6JzzeDj0wkqjTFzrHdJiWdgz
  #      client-id: backend-service
  #      grant-type: password
  #      grant-options:
  #        password:
  #          username: alice
  #          password: <PASSWORD>
  #    realm-path: dev-realm.json
  #      service-name: quarkus

#  log:
#    category:
#      "io.quarkus.category":
#        level: WARN
#      "org.apache.kafka.clients":
#        level: ERROR
#      "org.apache.kafka.common.utils":
#        level: ERROR
#      "org.apache.kafka.common.metrics":
#        level: ERROR

kafka:
  bootstrap:
    servers: host.docker.internal:29092
mp:
  rest:
    openapi:
      scan:
        enabled: true
  messaging:
    outgoing:
      users-out:
        connector: smallrye-kafka
        topic: user-out
    incoming:
      users-in:
        connector: smallrye-kafka
        key:
          deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        topic: user-in