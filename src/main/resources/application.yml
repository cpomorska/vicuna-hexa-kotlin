quarkus:
  camel:
    context:
      name: vicunacamel
    openapi:
      expose:
        enabled: true
    rest:
      inline-routes: true
    servlet:
      url-patterns: /vicuna/*

  http:
    cors:
      origins: /.*/
    http2: false
    access-log:
      enabled: true
    port: 8089
    root-path: /vicuna
    auth:
      proactive: true
      permission:
        secured:
          paths: /vicuna/api/*
          policy: authenticated
        public:
          paths: /vicuna/q/*
          policy: permit

  swagger-ui:
    always-include: true
    path: hui

  datasource:
    db-kind: postgresql
    jdbc:
      pooling-enabled: true
      url: jdbc:postgresql://host.docker.internal:15432/vicuna_user
    username: vicuna_user
    password: vicuna_pw

  hibernate-orm:
    database:
      generation: update
      create-schemas: true

  liquibase:
    enabled: false
    migrate-at-start: false
    change-log: db/db.changelog-master.yaml

  container-image:
    builder: docker
    build: false
    push: false
    image: cpomorska/vicuna-kotlin-quarkus
    tag: 1.0.develop

  oidc:
    auth-server-url: http://host.docker.internal:8180/realms/development
    client-id: backend-service
    credentials:
      client-secret:
        value: qQOkEGGd6JzzeDj0wkqjTFzrHdJiWdgz
    application-type: hybrid

  oidc-client:
    auth-server-url: http://host.docker.internal:8180/realms/development
    client-id: backend-service
    credentials:
      client-secret: qQOkEGGd6JzzeDj0wkqjTFzrHdJiWdgz
    grant-type: password
    grant-options:
      password:
        username: alice
        password: alice

  log:
    category:
      "io.quarkus.category":
        level: WARN
      "org.apache.kafka.clients":
        level: ERROR
      "org.apache.kafka.common.utils":
        level: ERROR
      "org.apache.kafka.common.metrics":
        level: ERROR

#kafka:
#   bootstrap:
#     servers: host.docker.internal:29092
mp:
  openapi:
    scan:
      disable: false
  messaging:
    outgoing:
      users-out:
        connector: smallrye-kafka
        topic: user-out
    incoming:
      users-in:
        connector: smallrye-kafka
        key:
          deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        topic: user-in